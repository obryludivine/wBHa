# Controls
if(is.null(m1)){stop(c("m1 n'a pas de valeur"))}
reg_covariates<-list(); reg_pvalues<-list()
for(iteration in c(1:nb_iteration)){
#####################################
#          Data generation          #
#####################################
# Mode: Choice between linear or logit mode to simulate pvalues
# size_n: Nb of individuals
# size_m: Nb of SNPs
# m1: Nb of causal SNPs
m0<-size_m-m1 #  m0: Nb of non causal SNPs
subset1<-m1%/%3; subset2<-m1%/%3; subset3<-(m1%%3)+(m1%/%3) # Nb of hypotheses in each subgroup of the covariable
## Regarding covariables
theoretical_maf_non_causal <- runif(m0, 0.05, 0.5)
theoretical_maf_causal_1 <- runif(subset1,0.05,0.15)
theoretical_maf_causal_2 <- runif(subset2,0.15,0.25)
theoretical_maf_causal_3 <- runif(subset3,0.3,0.4)
total_theoretical_maf <- c(theoretical_maf_causal_1,
theoretical_maf_causal_2,
theoretical_maf_causal_3,
theoretical_maf_non_causal)
non_causal_matrix <- apply(as.matrix(theoretical_maf_non_causal), 1, Calc_Geno,NbInd=size_n)
causal_matrix_1 <- apply(as.matrix(theoretical_maf_causal_1), 1, Calc_Geno,NbInd=size_n)
causal_matrix_2 <- apply(as.matrix(theoretical_maf_causal_2), 1, Calc_Geno,NbInd=size_n)
causal_matrix_3 <- apply(as.matrix(theoretical_maf_causal_3), 1, Calc_Geno,NbInd=size_n)
matrix_X <- cbind(causal_matrix_1,causal_matrix_2,causal_matrix_3,non_causal_matrix)
covariates <- apply(matrix_X, 2, Calc_maf_estimee) # Computation of the estimated MAF = covariates
## Regarding p-values
if(Mode=="linear"){ # If linear mode
r2=0.2 # Percentage explaining the model
### Beta building
if(ScenarioBeta=="Reference"){beta <- as.matrix(c(rep(3,subset1),rep(2,subset2),rep(1,subset3), rep(0,m0)))}
if(ScenarioBeta=="Inverse"){beta <- as.matrix(c(rep(1,subset1),rep(2,subset2),rep(3,subset3), rep(0,m0)))}
if(ScenarioBeta=="Constant"){beta <- as.matrix(c(rep(2,subset1),rep(2,subset2),rep(2,subset3), rep(0,m0)))}
### Regarding p-values
XB <- matrix_X %*% beta # Epsilon Matrix (linear)
sigma2 <- ( (r2-1) * sum((XB-mean(XB))^2) ) / ( r2*(2-size_n) )
epsilon <- as.matrix(rnorm(size_n, mean=0, sd=sqrt(sigma2) ))
Y <- XB + epsilon # Computation of Y (linear)
pvalues <- apply(matrix_X, 2, Test_Association_LineR,VarAExpliquer=Y) # Computation of Pj Linear = Pvalues
} else if(Mode=="logit"){ # If logit mode
#Beta building
if(ScenarioBeta=="Reference"){beta <- as.matrix(c(rep(log(1.8),subset1),rep(log(1.5),subset2),rep(log(1.3),subset3), rep(log(1),m0)))}
if(ScenarioBeta=="Inverse"){beta <- as.matrix(c(rep(log(1.3),subset1),rep(log(1.5),subset2),rep(log(1.8),subset3), rep(log(1),m0)))}
if(ScenarioBeta=="Constant"){beta <- as.matrix(c(rep(log(1.5),subset1),rep(log(1.5),subset2),rep(log(1.5),subset3), rep(log(1),m0)))}
# Choice of bêta0
list_ratio <- c(); i=1;
possible_values_beta0<-seq(0,-50,-0.1)
for (beta0 in possible_values_beta0) {
eXB <- exp(beta0+matrix_X%*%beta)
Y <- rbinom(size_n, 1, (eXB/ (1+eXB)) )
Y <- as.factor(Y)
list_ratio[i]<-c(prop.table(table(Y))[2])
i=i+1
}
beta0=possible_values_beta0[order(abs(list_ratio-0.5))[1]]
eXB <- exp(beta0+matrix_X%*%beta)
Y <- rbinom(size_n, 1, (eXB/ (1+eXB)) ) # Computation of Y:
Y <- as.factor(Y)
pvalues <- apply(matrix_X, 2, Test_Association_Logit,VarAExpliquer=Y) # Computation of Pj logit = Pvalues
}
reg_covariates[[iteration]]<-covariates
reg_pvalues[[iteration]]<-pvalues
}
return(list(reg_pvalues, reg_covariates))
}
#Main
##Parameters
nb_iteration=2
size_n=2000
r2=0.2
scenario=c("Reference")
chemin_output=c("Documents/Nouveau2021/Jeux_de_donnees_08.2021/IndependentCase/ReferenceScenario/")
##Creation
for (Mode in c("linear")) {#,"logit"
for (size_m in c(8000,14000,20000)) {#
for(m1 in c(25,50,100,150,10)){#
Config <- Generate_data(nb_iteration=nb_iteration,Mode=Mode,ScenarioBeta=scenario,size_n=size_n,size_m=size_m,m1=m1)
reg_pvalues <- Config[[1]]
reg_covariates <- Config[[2]]
if (Mode=="linear") {
if(scenario=="Reference"){Beta_LineR=c("B3210.RData")}
if(scenario=="Inverse"){Beta_LineR=c("B1230.RData")}
if(scenario=="Constant"){Beta_LineR=c("B2220.RData")}
name_output <- paste("LineR","n",size_n,"m",size_m,"m1",m1,"rho","0","tb","0","r2",r2,Beta_LineR,sep="_")
}
if(Mode=="logit"){
if(scenario=="Reference"){Beta_Logit=c("B_1.8_1.5_1.3_1.RData")}
if(scenario=="Inverse"){Beta_Logit=c("B_1.3_1.5_1.8_1.RData")}
if(scenario=="Constant"){Beta_Logit=c("B_1.5_1.5_1.5_1.RData")}
name_output <- paste("Logit","n",size_n,"m",size_m,"m1",m1,"rho","0","tb","0",Beta_Logit,sep="_")
}
save(reg_covariates,reg_pvalues, file=paste(chemin_output,name_output,sep=""))
print("fin")
}
}
}
#Functions
Calc_Geno <- function(NbInd,vecMAF){
z1 <- rbinom(NbInd, 1, vecMAF)
z2 <- rbinom(NbInd, 1, vecMAF)
X <- z1 + z2
return(X)
}
Calc_maf_estimee <- function(SNP) {
freqa_estimee <- (sum(SNP==0)*2+sum(SNP==1))/(2*length(SNP))
maf_estimee <- min(freqa_estimee, 1-freqa_estimee)
return(maf_estimee)
}
Test_Association_LineR <- function(VarAExpliquer,VarExplicative){
res <- summary(lm(VarAExpliquer~VarExplicative))$coefficient[8]
return(res)
}
Test_Association_Logit <- function(VarAExpliquer,VarExplicative){
res <- summary(glm(VarAExpliquer~VarExplicative,family=binomial(link=logit)))$coefficient[8]
return(res)
}
Generate_data <- function(nb_iteration=200, Mode="linear",ScenarioBeta="Reference", size_n=2000, size_m=20000, m1=NULL){
# Controls
if(is.null(m1)){stop(c("m1 n'a pas de valeur"))}
reg_covariates<-list(); reg_pvalues<-list()
for(iteration in c(1:nb_iteration)){
#####################################
#          Data generation          #
#####################################
# Mode: Choice between linear or logit mode to simulate pvalues
# size_n: Nb of individuals
# size_m: Nb of SNPs
# m1: Nb of causal SNPs
m0<-size_m-m1 #  m0: Nb of non causal SNPs
subset1<-m1%/%3; subset2<-m1%/%3; subset3<-(m1%%3)+(m1%/%3) # Nb of hypotheses in each subgroup of the covariable
## Regarding covariables
theoretical_maf_non_causal <- runif(m0, 0.05, 0.5)
theoretical_maf_causal_1 <- runif(subset1,0.05,0.15)
theoretical_maf_causal_2 <- runif(subset2,0.15,0.25)
theoretical_maf_causal_3 <- runif(subset3,0.3,0.4)
total_theoretical_maf <- c(theoretical_maf_causal_1,
theoretical_maf_causal_2,
theoretical_maf_causal_3,
theoretical_maf_non_causal)
non_causal_matrix <- apply(as.matrix(theoretical_maf_non_causal), 1, Calc_Geno,NbInd=size_n)
causal_matrix_1 <- apply(as.matrix(theoretical_maf_causal_1), 1, Calc_Geno,NbInd=size_n)
causal_matrix_2 <- apply(as.matrix(theoretical_maf_causal_2), 1, Calc_Geno,NbInd=size_n)
causal_matrix_3 <- apply(as.matrix(theoretical_maf_causal_3), 1, Calc_Geno,NbInd=size_n)
matrix_X <- cbind(causal_matrix_1,causal_matrix_2,causal_matrix_3,non_causal_matrix)
covariates <- apply(matrix_X, 2, Calc_maf_estimee) # Computation of the estimated MAF = covariates
## Regarding p-values
if(Mode=="linear"){ # If linear mode
r2=0.2 # Percentage explaining the model
### Beta building
if(ScenarioBeta=="Reference"){beta <- as.matrix(c(rep(3,subset1),rep(2,subset2),rep(1,subset3), rep(0,m0)))}
if(ScenarioBeta=="Inverse"){beta <- as.matrix(c(rep(1,subset1),rep(2,subset2),rep(3,subset3), rep(0,m0)))}
if(ScenarioBeta=="Constant"){beta <- as.matrix(c(rep(2,subset1),rep(2,subset2),rep(2,subset3), rep(0,m0)))}
### Regarding p-values
XB <- matrix_X %*% beta # Epsilon Matrix (linear)
sigma2 <- ( (r2-1) * sum((XB-mean(XB))^2) ) / ( r2*(2-size_n) )
epsilon <- as.matrix(rnorm(size_n, mean=0, sd=sqrt(sigma2) ))
Y <- XB + epsilon # Computation of Y (linear)
pvalues <- apply(matrix_X, 2, Test_Association_LineR,VarAExpliquer=Y) # Computation of Pj Linear = Pvalues
} else if(Mode=="logit"){ # If logit mode
#Beta building
if(ScenarioBeta=="Reference"){beta <- as.matrix(c(rep(log(1.8),subset1),rep(log(1.5),subset2),rep(log(1.3),subset3), rep(log(1),m0)))}
if(ScenarioBeta=="Inverse"){beta <- as.matrix(c(rep(log(1.3),subset1),rep(log(1.5),subset2),rep(log(1.8),subset3), rep(log(1),m0)))}
if(ScenarioBeta=="Constant"){beta <- as.matrix(c(rep(log(1.5),subset1),rep(log(1.5),subset2),rep(log(1.5),subset3), rep(log(1),m0)))}
# Choice of bêta0
list_ratio <- c(); i=1;
possible_values_beta0<-seq(0,-50,-0.1)
for (beta0 in possible_values_beta0) {
eXB <- exp(beta0+matrix_X%*%beta)
Y <- rbinom(size_n, 1, (eXB/ (1+eXB)) )
Y <- as.factor(Y)
list_ratio[i]<-c(prop.table(table(Y))[2])
i=i+1
}
beta0=possible_values_beta0[order(abs(list_ratio-0.5))[1]]
eXB <- exp(beta0+matrix_X%*%beta)
Y <- rbinom(size_n, 1, (eXB/ (1+eXB)) ) # Computation of Y:
Y <- as.factor(Y)
pvalues <- apply(matrix_X, 2, Test_Association_Logit,VarAExpliquer=Y) # Computation of Pj logit = Pvalues
}
reg_covariates[[iteration]]<-covariates
reg_pvalues[[iteration]]<-pvalues
}
return(list(reg_pvalues, reg_covariates))
}
#Main
##Parameters
nb_iteration=2
size_n=2000
r2=0.2
scenario=c("Inverse")
chemin_output=c("Documents/Nouveau2021/Jeux_de_donnees_08.2021/IndependentCase/InverseScenario/")
##Creation
for (Mode in c("linear","logit")) {#
for (size_m in c(8000,14000,20000)) {#
for(m1 in c(25,50,100,150,10)){#
Config <- Generate_data(nb_iteration=nb_iteration,Mode=Mode,ScenarioBeta=scenario,size_n=size_n,size_m=size_m,m1=m1)
reg_pvalues <- Config[[1]]
reg_covariates <- Config[[2]]
if (Mode=="linear") {
if(scenario=="Reference"){Beta_LineR=c("B3210.RData")}
if(scenario=="Inverse"){Beta_LineR=c("B1230.RData")}
if(scenario=="Constant"){Beta_LineR=c("B2220.RData")}
name_output <- paste("LineR","n",size_n,"m",size_m,"m1",m1,"rho","0","tb","0","r2",r2,Beta_LineR,sep="_")
}
if(Mode=="logit"){
if(scenario=="Reference"){Beta_Logit=c("B_1.8_1.5_1.3_1.RData")}
if(scenario=="Inverse"){Beta_Logit=c("B_1.3_1.5_1.8_1.RData")}
if(scenario=="Constant"){Beta_Logit=c("B_1.5_1.5_1.5_1.RData")}
name_output <- paste("Logit","n",size_n,"m",size_m,"m1",m1,"rho","0","tb","0",Beta_Logit,sep="_")
}
save(reg_covariates,reg_pvalues, file=paste(chemin_output,name_output,sep=""))
print("fin")
}
}
}
load("~/Documents/Nouveau2021/Jeux_de_donnees_08.2021/Jeux_de_donnees_08.2021/CorrelationCase/Logit_n_2000_m_8000_m1_10_rho_0.75_tb_10_B_1.8_1.5_1.3_1.RData")
View(reg_covariates)
View(reg_pvalues)
View(reg_SNPs_Drawn_Correlated)
View(reg_correlation_draw)
load("~/Documents/Nouveau2021/Jeux_de_donnees_08.2021/Jeux_de_donnees_08.2021/CorrelationCase/LineR_n_2000_m_8000_m1_150_rho_0.5_tb_10_r2_0.2_B3210.RData")
View(reg_correlation_draw)
View(reg_covariates)
View(reg_pvalues)
View(reg_SNPs_Drawn_Correlated)
load("~/Documents/Nouveau2021/Jeux_de_donnees_08.2021/Jeux_de_donnees_08.2021/IndependentCase/ConstantScenario/Logit_n_2000_m_14000_m1_150_rho_0_tb_0_B_1.5_1.5_1.5_1.RData")
View(reg_correlation_draw)
View(reg_covariates)
View(reg_pvalues)
View(reg_SNPs_Drawn_Correlated)
View(reg_covariates)
load("~/Documents/Nouveau2021/Jeux_de_donnees_08.2021/Jeux_de_donnees_08.2021/IndependentCase/ConstantScenario/LineR_n_2000_m_14000_m1_100_rho_0_tb_0_r2_0.2_B2220.RData")
load("~/Documents/Nouveau2021/Jeux_de_donnees_08.2021/Jeux_de_donnees_08.2021/IndependentCase/InverseScenario/Logit_n_2000_m_14000_m1_150_rho_0_tb_0_B_1.3_1.5_1.8_1.RData")
View(reg_correlation_draw)
View(reg_covariates)
View(reg_pvalues)
View(reg_SNPs_Drawn_Correlated)
load("~/Documents/Nouveau2021/Jeux_de_donnees_08.2021/Jeux_de_donnees_08.2021/IndependentCase/InverseScenario/LineR_n_2000_m_8000_m1_100_rho_0_tb_0_r2_0.2_B1230.RData")
View(reg_correlation_draw)
View(reg_covariates)
View(reg_pvalues)
View(reg_SNPs_Drawn_Correlated)
load("~/Documents/Nouveau2021/Jeux_de_donnees_08.2021/Jeux_de_donnees_08.2021/IndependentCase/ReferenceScenario/Logit_n_2000_m_8000_m1_50_rho_0_tb_0_B_1.8_1.5_1.3_1.RData")
View(reg_correlation_draw)
View(reg_covariates)
View(reg_pvalues)
View(reg_SNPs_Drawn_Correlated)
load("~/Documents/Nouveau2021/Jeux_de_donnees_08.2021/Jeux_de_donnees_08.2021/IndependentCase/ReferenceScenario/LineR_n_2000_m_8000_m1_50_rho_0_tb_0_r2_0.2_B3210.RData")
View(reg_correlation_draw)
View(reg_covariates)
View(reg_pvalues)
View(reg_SNPs_Drawn_Correlated)
load("~/Documents/Nouveau2021/Jeux_de_donnees_08.2021/IndependentCase/ReferenceScenario/LineR_n_2000_m_14000_m1_100_rho_0_tb_0_r2_0.2_B3210.RData")
load("~/Documents/Nouveau2021/Jeux_de_donnees_08.2021/IndependentCase/ReferenceScenario/LineR_n_2000_m_14000_m1_100_rho_0_tb_0_r2_0.2_B3210.RData")
View(reg_covariates)
install.packages(c("devtools", "usethis", "roxygen2"))
load("~/Documents/Nouveau2021/Application_Procedures/IndependentCase/ReferenceScenario/Res_Logit_n_2000_m_8000_m1_50_rho_0_tb_0_B_1.8_1.5_1.3_1.RData")
res_FDR_power
load("~/Documents/Nouveau2021/Jeux_de_donnees_08.2021/IndependentCase/ReferenceScenario/Logit_n_2000_m_20000_m1_50_rho_0_tb_0_B_1.8_1.5_1.3_1.RData")
save.image("~/Téléchargements/test.RData")
?save.image
?save
save.image("~/Téléchargements/test.RData",compress = "bzip2")
save.image("~/Téléchargements/test.RData",compress = "xz")
ls() #liste des objets chargés
rm(list = ls()) #Suppression des objets
setwd("Documents/Nouveau2021/PackageR/wBHa/")
library(wBHa)
library(wBHa)
data("GSE90102_01")
x <- c(rbeta(1000, 0.2, 1), runif(1000, 0, 1))
hist(x)
hist(pvalues)
hist(GSE90102_01$rawp)
x <- c(rbeta(100, 0.2, 1), runif(1000, 0, 1))
hist(x)
x <- c(rbeta(100, 0.2, 1), runif(2000, 0, 1))
hist(x)
x <- c(rbeta(200, 0.2, 1), runif(1000, 0, 1))
hist(x)
x <- c(rbeta(100, 0.2, 1), runif(1000, 0, 1))
hist(x)
hist(GSE90102_01$MAF)
x.covariate = rep(c(1,2), each=1000)
hist(x.covariate)
hist(GSE90102_01$MAF)
load("~/Documents/Nouveau2021/Jeux_de_donnees_08.2021/IndependentCase/ReferenceScenario/LineR_n_2000_m_8000_m1_50_rho_0_tb_0_r2_0.2_B3210.RData")
hist(reg_covariates)
hist(reg_covariates[[1]])
hist(GSE90102_01$MAF)
x <- c(rbeta(1000, 0.2, 1), runif(1000, 0, 1))
hist(x)
hist(GSE90102_01$rawp)
hist(reg_pvalues[[1]])
hist(reg_pvalues[[19]])
hist(reg_covariates[[19]])
covariates <- runif(2000,0.05,0.5)
hist(covariates)
hist(GSE90102_01$rawp)
hist(reg_pvalues[[19]])
x <- c(rbeta(1000, 0.2, 1), runif(1000, 0, 1))
hist(x)
runif(1000,0,0.1)
x <- c(runif(1000,0,0.1), runif(1000,0,1))
hist(x)
x <- c(runif(1000,0,0.1), runif(1000,0,1))
hist(x)
x <- c(runif(100,0,0.1), runif(1000,0,1))
hist(x)
x <- c(runif(10,0,0.1), runif(1000,0,1))
hist(x)
x <- c(runif(50,0,0.1), runif(1000,0,1))
hist(x)
x <- c(runif(100,0,0.1), runif(1000,0,1))
hist(x)
x <- c(runif(100,0,0.1), runif(1900,0,1))
hist(x)
x <- c(runif(100,0,0.1), runif(1900,0,1))
hist(x)
wBHa(pvalues, covariates, alpha)
pvalues <- GSE90102_01$rawp
covariates <- GSE90102_01$MAF
wBHa(pvalues, covariates, alpha)
wBHa(pvalues, covariates)
wBHa_object <- wBHa(pvalues, covariates)
# Simulate data
pvalues_simu <- c(runif(100,0,0.1), runif(1900,0,1))
covariates_simu <- runif(2000,0.05,0.5)
wBHa_object_simu <- wBHa(pvalues_simu, covariates_simu)
View(wBHa_object_simu)
?bh
?p.adjust
x <- rnorm(50, mean = c(rep(0, 25), rep(3, 25)))
p <- 2*pnorm(sort(-abs(x)))
hist(p)
matplot(pvalues, wBHa_object_simu$adjusted_pvalues)
# simulate data
pvalues <- c(runif(100,0,0.1), runif(1900,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
matplot(pvalues, wBHa_object_simu$adjusted_pvalues)
matplot(pvalues, wBHa_object_simu$adjusted_pvalues)
x <- rnorm(50, mean = c(rep(0, 25), rep(3, 25)))
p <- 2*pnorm(sort(-abs(x)))
hist(p)
# simulate data
pvalues <- c(runif(100,0,0.1), runif(1900,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
library(IHW)
hist(1-pnorm(rnorm(2000)))
table(covariates_simu[wBHa_object_simu$adjusted_pvalues<=0.05])
table(covariates_simu[wBHa_object_simu$adjusted_pvalues<=0.1])
pvalues <- GSE90102_01$rawp
covariates <- GSE90102_01$MAF
wBHa_object <- wBHa(pvalues, covariates)
table(covariates[wBHa_object$adjusted_pvalues<=0.1])
[wBHa_object$adjusted_pvalues<=0.1])
[wBHa_object$adjusted_pvalues<=0.1]
wBHa_object$adjusted_pvalues<=0.1
pvalues[wBHa_object$adjusted_pvalues<=0.1]
which(wBHa_object$adjusted_pvalues<=0.1)
which(wBHa_object$adjusted_pvalues<=0.05)
# simulate data
pvalues <- c(runif(100,0,0.1), runif(1900,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.05)
which(wBHa_object$adjusted_pvalues<=0.05)
# simulate data
pvalues <- c(runif(100,0,0.1), runif(2900,0,1))
hist(pvalues)
# simulate data
pvalues <- c(runif(100,0,0.1), runif(2900,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.05)
covariates <- runif(3000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.05)
covariates <- runif(2000,0.05,0.5)
# simulate data
pvalues <- c(runif(1000,0,0.1), runif(1000,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.05)
# simulate data
pvalues <- c(runif(1000,0,0.1), runif(1000,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.05)
which(wBHa_object$adjusted_pvalues<=0.1)
# simulate data
pvalues <- c(runif(1000,0,0.1), runif(1000,0,1))
hist(pvalues)
# simulate data
pvalues <- c(runif(1000,0,0.1), runif(1000,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.1)
# simulate data
pvalues <- c(runif(1000,0,0.1), runif(1000,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.1)
pvalues <- c(runif(1000,0,0.1), runif(1000,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.1)
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.5)
pvalues <- c(runif(1000,0,0.1), runif(1000,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.2)
pvalues <- c(runif(1000,0,0.1), runif(1000,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.2)
pvalues <- c(runif(1000,0,0.1), runif(1000,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.2)
pvalues <- c(runif(1000,0,0.1), runif(1000,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.2)
pvalues <- c(runif(1000,0,0.1), runif(1000,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.1)
pvalues <- c(runif(1000,0,0.1), runif(1000,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.1)
pvalues <- c(runif(1000,0,0.1), runif(1000,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.1)
pvalues <- c(runif(1000,0,0.1), runif(1000,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.1)
pvalues <- c(runif(1000,0,0.1), runif(1000,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.1)
pvalues <- c(runif(1000,0,0.1), runif(1000,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.1)
pvalues <- c(runif(1000,0,0.1), runif(1000,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.1)
pvalues <- c(runif(1000,0,0.1), runif(1000,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.1)
pvalues <- c(runif(1000,0,0.1), runif(1000,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.1)
set.seed(123)
pvalues <- c(runif(1000,0,0.1), runif(1000,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.1)
set.seed(123)
pvalues <- c(runif(1000,0,0.1), runif(1000,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.05)
set.seed(111)
pvalues <- c(runif(1000,0,0.1), runif(1000,0,1))
covariates <- runif(2000,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.05)
matplot(pvalues,wBHa_object$adjusted_pvalues)
plot(pvalues,wBHa_object$adjusted_pvalues)
# simulate data
set.seed(111)
pvalues <- c(runif(100,0,0.1), runif(100,0,1))
covariates <- runif(200,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.05)
pvalues <- c(runif(100,0,0.1), runif(100,0,1))
covariates <- runif(200,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.05)
pvalues <- c(runif(100,0,0.1), runif(100,0,1))
covariates <- runif(200,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.05)
# simulate data
set.seed(123)
pvalues <- c(runif(100,0,0.1), runif(100,0,1))
covariates <- runif(200,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.05)
set.seed(123)
pvalues <- c(runif(100,0,0.1), runif(100,0,1))
covariates <- runif(200,0.05,0.5)
wBHa_object <- wBHa(pvalues, covariates)
which(wBHa_object$adjusted_pvalues<=0.05)
wBHa_object <- wBHa(pvalues, covariates)
wBHa_object
library(wBHa)
?wBHa
